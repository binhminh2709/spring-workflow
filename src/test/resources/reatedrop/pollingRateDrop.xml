<?xml version="1.0" encoding="UTF-8"?>
<!-- ==========================================================================
*     SPRING BEAN DEFINITION FILE
*     Javaworld Article - Simple Sequence Workflow Example
*
*     Reuse all the beans definde in the main rateDrop.xml
*     but add in the TimerTask infasturcte and necessary polling 
*     workflow activity.
  ========================================================================== -->
<beans xmlns="http://www.springframework.org/schema/beans"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">


  <bean class="org.iocworkflow.test.sequence.ratedrop.PollRates" id="polling"/>


  <!-- simple sequence workflow process -->
  <bean class="org.iocworkflow.SequenceProcessor" id="pollingProcessor">
    <property name="activities">
      <list>
        <ref bean="polling"/> <!--Poll for rate drops -->
        <ref bean="activity1"/><!--Build recipients-->
        <ref bean="activity2"/><!--Construct DOM tree-->
        <ref bean="activity3"/><!--Apply XSL Transform-->
        <ref bean="activity4"/><!--Write Audit Data-->
        <ref bean="activity5"/><!--Attempt to send message-->
      </list>
    </property>
    <property name="defaultErrorHandler">
      <ref bean="defaultErrorHandler"></ref>
    </property>
    <property name="processContextClass">
      <value>org.iocworkflow.test.sequence.ratedrop.RateDropContext</value>
    </property>
  </bean>

  <!-- timer to invoke airline rate drop workflow -->
  <bean class="org.springframework.scheduling.timer.MethodInvokingTimerTaskFactoryBean" id="checkInvokingTask">
    <property name="targetObject">
      <ref bean="pollingProcessor"/>
    </property>
    <property name="targetMethod">
      <value>doActivities</value>
    </property>
  </bean>
  <bean class="org.springframework.scheduling.timer.ScheduledTimerTask" id="pollingProcessorTask">
    <!-- wait 10 milli seconds before starting repeated execution -->
    <property name="delay">
      <value>10</value>
    </property>
    <!-- run every 1 second -->
    <property name="period">
      <value>1000</value>
    </property>
    <property name="timerTask">
      <ref bean="checkInvokingTask"/>
    </property>
  </bean>

  <!-- Timer factoies are started as soon as the Spring ApplicationContext loads-->
  <bean class="org.springframework.scheduling.timer.TimerFactoryBean" id="timerFactory">
    <property name="scheduledTimerTasks">
      <list>
        <!-- actual airline processor -->
        <ref bean="pollingProcessorTask"/>
      </list>
    </property>
  </bean>
</beans>
